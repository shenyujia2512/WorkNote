import zlib
import struct
import argparse
import itertools
import os

image = []
def GetImgPathFromFolder():
    for root, dirs, files in os.walk(os.path.dirname(os.path.abspath(__file__))):
        for file in files:
            if(os.path.join(root,file).endswith("png") ) :
                # 获取文件所属目录
                #print(root)
                # 获取文件所处的文件夹名
                #print(root.split(os.sep)[-1])
                # 获取文件名称
                #print(file)
                # 获取文件路径
                #print(os.path.join(root,file))
                image.append(file)

GetImgPathFromFolder()
for file in image:
    bin_data = open(file, 'rb').read()
    crc32key = zlib.crc32(bin_data[12:29]) # 计算crc
    original_crc32 = int(bin_data[29:33].hex(), 16) # 原始crc

    if crc32key == original_crc32: # 计算crc对比原始crc
        print('宽高没有问题!')
    else:
        for i, j in itertools.product(range(4095), range(4095)): # 理论上0x FF FF FF FF，但考虑到屏幕实际/cpu，0x 0F FF就差不多了，也就是4095宽度和高度
            data = bin_data[12:16] + struct.pack('>i', i) + struct.pack('>i', j) + bin_data[24:29]
            crc32 = zlib.crc32(data)
            if(crc32 == original_crc32): # 计算当图片大小为i:j时的CRC校验值，与图片中的CRC比较，当相同，则图片大小已经确定
                print(f"\nCRC32: {hex(original_crc32)}")
                print(f"宽度: {i}, hex: {hex(i)}")
                print(f"高度: {j}, hex: {hex(j)}")
                dst = open(file, 'wb')
                data = bin_data[:12] + data + bin_data[29:]
                dst.write(data)
                break

